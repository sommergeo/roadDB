% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_humanremains.R
\name{road_get_human_remains}
\alias{road_get_human_remains}
\title{Get human remains from ROAD database}
\usage{
road_get_human_remains(
  continents = NULL,
  subcontinents = NULL,
  countries = NULL,
  locality_types = NULL,
  cultural_periods = NULL,
  categories = NULL,
  age_min = NULL,
  age_max = NULL,
  genus = NULL,
  species = NULL,
  assemblages = NULL
)
}
\arguments{
\item{continents}{string (one item) or vector of strings (one or more items); defaults to NULL.}

\item{subcontinents}{string (one item) or vector of strings (one or more items); defaults to NULL.}

\item{countries}{string (one item) or vector of strings (one or more items); defaults to NULL.}

\item{locality_types}{string (one item) or vector of strings (one or more items); defaults to NULL.}

\item{cultural_periods}{string (one item) or vector of strings (one or more items); defaults to NULL.}

\item{categories}{string (one item) or vector of strings (one or more items).}

\item{age_min}{integer; minimum age of assemblage.}

\item{age_max}{integer; maximum age of assemblage.}

\item{genus}{string (one item) or vector of strings (one or more items); can not be used in combination with `genus_species`.}

\item{species}{string (one item) or vector of strings (one or more items); can not be used in combination with `genus_species`.}

\item{assemblages}{list of assemblages; return value from function `road_get_assemblages`.}
}
\value{
Database search result as list of human remains.
}
\description{
`road_get_human_remains` fetches data of human remains from ROAD database.
}
\details{
Human remains are always part of an assemblage which means the function needs a list of
assemblages (return value of function `road_get_assemblages`) as its first parameter.
Use this function
in one of the two modes depending on which parameters you use:
Mode 1: either one or both of `genus` and `species` is used (not NULL)
Mode 2:
}
\examples{
road_get_human_remains(genus = 'Homo', species = 'neanderthalensis')
road_get_human_remains(genus = 'Homo')
road_get_human_remains(species = 'neanderthalensis')
}
