install.packages("RPostgres")
con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432, user=rstudioapi::askForPassword("Database username"), password=rstudioapi::askForPassword("Database password"))
library(RPostgres)
con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432, user=rstudioapi::askForPassword("Database username"), password=rstudioapi::askForPassword("Database password"))
con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432, user=rstudioapi::askForPassword("Database username"), password=rstudioapi::askForPassword("Database password"))
query_culutre <- 'locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like "%Oldowan%"'
query_culutre <- 'locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like "%s"'
query <- sprintf(query_culture, culture)
query_culture <- 'locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like "%s"'
culture <- 'Oldowan'
query <- sprintf(query_culture, culture)
tab <- dbGetQuery(con, query)
rm(query_culutre)
query
tab <- dbGetQuery(con, 'locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like "Oldowan"')
tab <- dbGetQuery(con, 'locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like "Oldowan"')
library(RPostgres)
library(RPostgreSQL)
install.packages("RPostgreSQL")
tab <- dbGetQuery(con, 'locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like "Oldowan"')
con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432, user=rstudioapi::askForPassword("Database username"), password=rstudioapi::askForPassword("Database password"))
library(RPostgreSQL)
library(RPostgres)
con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432, user=rstudioapi::askForPassword("Database username"), password=rstudioapi::askForPassword("Database password"))
tab <- dbGetQuery(con, 'locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like "Oldowan"')
tab <- dbGetQuery(con, 'locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like ')
library(DBI)
tab <- dbGetQuery(con, 'locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like "Oldowan"')
tab <- dbGetQuery(con, "locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like 'Oldowan'")
tab <- dbGetQuery(con, "SELECT locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like 'Oldowan'")
tab <- dbGetQuery(con, "SELECT DISTINCT on (archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y) archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y FROM archaeological_layer, locality WHERE (locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like '%Oldowan%')")
View(tab)
query_culture <- 'SELECT DISTINCT on (archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y) archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y FROM archaeological_layer, locality WHERE (locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like "%s")'
culture <- 'Oldowan'
query <- sprintf(query_culture, culture)
tab <- dbGetQuery(con, query)
query_culture <- 'SELECT DISTINCT on (archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y) archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y FROM archaeological_layer, locality WHERE (locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like "%%s%")'
culture <- 'Oldowan'
query <- sprintf(query_culture, culture)
culture <- 'Oldowan - Africa'
query <- sprintf(query_culture, culture)
query_culture <- 'SELECT DISTINCT on (archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y) archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y FROM archaeological_layer, locality WHERE (locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like "%s")'
culture <- 'Oldowan - Africa'
query <- sprintf(query_culture, culture)
tab <- dbGetQuery(con, query)
query_culture <- "SELECT DISTINCT on (archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y) archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y FROM archaeological_layer, locality WHERE (locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like '%s')"
culture <- 'Oldowan - Africa'
query <- sprintf(query_culture, culture)
tab <- dbGetQuery(con, query)
View(tab)
tab <- dbGetQuery(con, query) %>% st_as_sf(coords = c(X, Y))
library(tidyverse)
library(sf)
tab <- dbGetQuery(con, query) %>% st_as_sf(coords = c(X, Y))
tab <- dbGetQuery(con, query) %>% st_as_sf(coords = c("X", "Y"))
View(tab)
tab <- dbGetQuery(con, query) %>% st_as_sf(coords = c(x,y))
tab <- dbGetQuery(con, query) %>% st_as_sf(coords = c('x','y'))
tab <- dbGetQuery(con, query)
tab <- st_as_sf(coords = c('x','y'))
query <- sprintf(query_culture, culture)
dat <- dbGetQuery(con, query)
dat <- st_as_sf(dat, coords = c('x','y'))
View(dat)
plot(dat)
culture <- '*'
query <- sprintf(query_culture, culture)
dat <- dbGetQuery(con, query)
View(dat)
road_query <- function(culture, spatial=T){
con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432, user=rstudioapi::askForPassword("Database username"), password=rstudioapi::askForPassword("Database password"))
query_culture <- "SELECT DISTINCT on (archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y) archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y FROM archaeological_layer, locality WHERE (locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like '%s')"
query <- sprintf(query_culture, culture)
dat <- dbGetQuery(con, query)
if(spatial==T){
dat <- st_as_sf(dat, coords = c('x','y'))
}
}
plot(road_query('Oldowan - Africa'))
culture==T
tab
crs(tab)
st_crs(tab)
road_query <- function(culture, spatial=T){
con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432, user=rstudioapi::askForPassword("Database username"), password=rstudioapi::askForPassword("Database password"))
query <- sprintf(query_culture, culture)
dat <- dbGetQuery(con, query)
if(spatial==T){
dat <- st_as_sf(dat, coords = c('x','y')) %>% st_set_crs(4326)
}
}
st_crs(dat)
st_crs(tab)
dat <- st_as_sf(dat, coords = c('x','y')) %>% st_set_crs(4326)
dat <- st_as_sf(dat, coords = c('x','y')) %>% st_set_crs(4326)
dat <- dbGetQuery(con, query)
dat <- st_as_sf(dat, coords = c('x','y'))
dat <- st_as_sf(dat, coords = c('x','y')) %>% st_set_crs(4326)
con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432, user=rstudioapi::askForPassword("Database username"), password=rstudioapi::askForPassword("Database password"))
query_culture <- "SELECT DISTINCT on (archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y) archaeological_layer.locality_idlocality, archaeological_layer.archstratigraphy_idarchstrat, locality.x, locality.y FROM archaeological_layer, locality WHERE (locality.idlocality = archaeological_layer.locality_idlocality and archaeological_layer.archstratigraphy_idarchstrat like '%s')"
culture <- 'Oldowan - Africa'
query <- sprintf(query_culture, culture)
dat <- dbGetQuery(con, query)
dat <- st_as_sf(dat, coords = c('x','y'))
dat <- st_as_sf(dat, coords = c('x','y')) %>% st_set_crs(4326)
st_crs(dat)
query_culture <- readr::read_file('query_culture.sql')
query_culture
culture <- 'Oldowan - Africa'
query <- sprintf(query_culture, culture)
dat <- dbGetQuery(con, query)
dat <- st_as_sf(dat, coords = c('x','y'))
dat <- st_as_sf(dat, coords = c('x','y')) %>% st_set_crs(4326)
View(dat)
View(tab)
query_culture <- readr::read_file('query_culture.sql')
culture <- 'Oldowan - Africa'
query <- sprintf(query_culture, culture)
dat <- dbGetQuery(con, query)
dat <- st_as_sf(dat, coords = c('x','y'))
dat <- st_as_sf(dat, coords = c('x','y'), crs=crs(4326))
st_crs(dat)
dat <- st_as_sf(dat, coords = c('x','y'), crs=crs(4326))
plot(dat)
dat <- st_as_sf(dat, coords = c('x','y'), crs='EPSG:4326')
st_crs(dat)
dat <- st_as_sf(dat, coords = c('x','y'), crs=st_crs(4326))
st_crs(dat)
dat <- st_as_sf(dat, coords = c('x','y'))
dat <- st_as_sf(dat, coords = c('x','y'), crs=st_crs(4326))
st_crs(dat)
dat <- st_as_sf(dat, coords = c('x','y')) %>% st_set_crs(4326)
st_crs(dat)
exists(culture)
culture <- 'Oldowan - Africa'
exists(culture)
exists(dat)
exist(dat)
exists
exists(dat)
exists('dat')
exists('culture')
exists('x')
rm(tab)
rm(culture)
rm(con)
rm(dat)
library(tidyverse)
library(sf)
library(RPostgreSQL)
library(RPostgres)
test <- road_query(culture='Oldowan - Africa')
road_query <- function(culture, spatial=T){
# Prepare query
if(exists('culture')){
# Load sql query template
query_culture <- readr::read_file('query_culture.sql')
# Integrate query
query <- sprintf(query_culture, culture)
}
# Run the query
dat <- dbGetQuery(con, query)
# Make it *spatial*
if(spatial==T){
dat <- st_as_sf(dat, coords = c('x','y')) %>% st_set_crs(4326)
}
}
test <- road_query(culture='Oldowan - Africa')
library(tidyverse)
library(sf)
library(RPostgreSQL)
library(RPostgres)
road_query <- function(culture, spatial=T){
# Prepare query
if(exists('culture')){
# Load sql query template
query_culture <- readr::read_file('query_culture.sql')
# Integrate query
query <- sprintf(query_culture, culture)
}
# Run the query
dat <- dbGetQuery(con, query)
# Make it *spatial*
if(spatial==T){
dat <- st_as_sf(dat, coords = c('x','y')) %>% st_set_crs(4326)
}
}
test <- road_query(culture='Oldowan - Africa')
library(tidyverse)
library(sf)
library(RPostgreSQL)
library(RPostgres)
road_query <- function(culture, spatial=T){
# Prepare query
if(exists('culture')){
# Load sql query template
query_culture <- readr::read_file('query_culture.sql')
# Integrate query
query <- sprintf(query_culture, culture)
}
# Run the query
dat <- dbGetQuery(con, query)
# Make it *spatial*
if(spatial==T){
dat <- st_as_sf(dat, coords = c('x','y')) %>% st_set_crs(4326)
}
}
road_query <- function(culture, spatial=T){
# Connect do ROAD
con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432, user=rstudioapi::askForPassword("Database username"), password=rstudioapi::askForPassword("Database password"))
# Prepare query
if(exists('culture')){
# Load sql query template
query_culture <- readr::read_file('query_culture.sql')
# Integrate query
query <- sprintf(query_culture, culture)
}
# Run the query
dat <- dbGetQuery(con, query)
# Make it *spatial*
if(spatial==T){
dat <- st_as_sf(dat, coords = c('x','y')) %>% st_set_crs(4326)
}
}
test <- road_query(culture='Oldowan - Africa')
View(test)
